plugins {
    id 'dev.architectury.loom' version '1.4.+'
}

version = "${mc_version}-v${mod_version}"
group = mod_group

java {
    targetCompatibility = JavaVersion.VERSION_17
    sourceCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfig 'embeddiumplus.mixins.json'
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://maven.parchmentmc.org/" }
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
}

[jar, remapJar].each {
    it.configure {
        archiveBaseName = "${mod_name}".replace("+", "Plus")
    }
}

dependencies {
    minecraft("com.mojang:minecraft:${mc_version}")
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${mc_version}:${parchment_version}@zip")
    }
    forge "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // DEPENDENCIES
    modImplementation("org.embeddedt:embeddium-${mc_version}:${embeddium_version}")
    modImplementation("curse.maven:jei-238222:${jei_version}")
    modLocalRuntime("curse.maven:textrues-embeddium-options-910506:${embeddium_options_version}")
    modLocalRuntime("curse.maven:oculus-581495:${oculus_version}")

    // MOD SUPPORT
    modImplementation("com.simibubi.create:create-${mc_version}:${create_version}:slim") { transitive = false }
    modImplementation("com.jozufozu.flywheel:flywheel-forge-${mc_version}:${flywheel_version}")
    modImplementation("com.tterrag.registrate:Registrate:${registrate_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "${mod_author}",
                "Specification-Version": "${mod_version}",
                "Implementation-Title": "${mod_name}",
                "Implementation-Version": "${mod_version}",
                "Implementation-Vendor" : "${mod_author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixin.json"
        ])
    }
}

processResources {
    outputs.upToDateWhen { false }
    def props = [
            version: mod_version,
            minecraft: mc_version,
            forge: forge_version.split('\\.')[0],
            embeddium: embeddium_version.split('-')[0],
    ]
    inputs.properties props

    filesMatching(['META-INF/mods.toml']) {
        expand props
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
}