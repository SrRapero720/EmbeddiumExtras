plugins {
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = "${mcversion}-v${modversion}"
group = "me.srrapero720"
archivesBaseName = modid

java {
    targetCompatibility = JavaVersion.VERSION_17
    sourceCompatibility = JavaVersion.VERSION_17
}

minecraft {
    mappings channel: "${mappingsch}", version: "${mappings_version}-${mcversion}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    runs {
        client {
            taskName "runClient-${mcversion}"
            workingDirectory project.file('run')
            arg '-mixin.config=' + String.valueOf(modid) + '.mixin.json'
            //jvmArgs '-XX:+UnlockCommercialFeatures' // uncomment for profiling
            property 'forge.logging.console.level', 'info'
            property 'terminal.jline', 'true'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcversion}-${fgversion}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:embeddium-908741:4819807")
    runtimeOnly fg.deobf("curse.maven:oculus-581495:4767500")
    //implementation fg.deobf("curse.maven:jei-238222:3758750")

    // MOD SUPPORT
    implementation fg.deobf("com.simibubi.create:create-${mcversion}:${createversion}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${mcversion}:${flywheelversion}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrateversion}")
}

mixin {
    add sourceSets.main, "${modid}.mixin-refmap.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "${modauthor}",
                "Specification-Version": "${modversion}",
                "Implementation-Title": "${modname}",
                "Implementation-Version": "${modversion}",
                "Implementation-Vendor" : "${modauthor}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixin.json"
        ])
    }
}

// Process target resources with mod info
tasks.processResources.outputs.upToDateWhen { false }
processResources {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand(rootProject.properties)
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
}